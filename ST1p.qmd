---
title: "Séries Temporais - Introdução e gráficos"
author: "Robson Bruno Dutra Pereira"
format:
  revealjs:
    incremental: true
    theme: serif
    smaller: true
    scrollable: true
editor: visual
execute:
  echo: false
  warning: false
  message: false
---

## Introdução à disciplina Séries Temporais

-   Uma série temporal consiste em um conjunto de observações de uma variável aleatória ordenada no tempo.

-   A Análise de Séries temporais visa o estudo e obtenção de modelos preditivos.

-   O objetivo ao final é realizar previsões, viabilizando ações de planejamento.

-   A seguir serão apresentados exemplos de séries e visualizações.

```{r}
library(rbcb)
library(forecast)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(fpp3)
library(GGally)
library(gt)
theme_set(theme_bw())
```

## Índice de preços ao consumidor (IPCA) {.smaller}

```{r}
ipca <- get_series(c(IPCA = 433), as = "ts")

ipca_tsibble <- as_tsibble(ipca, index = index)

head(ipca_tsibble) |> gt()
```

::: aside
http://www.ipeadata.gov.br/Default.aspx
:::

## Índice de preços ao consumidor (IPCA) {.smaller}

::: columns
::: {.column width="40%"}
-   Série temporal do IPCA, com frequência mensal a partir de 1980.
-   Inflação no país foi controlada a partir do plano real.
:::

::: {.column width="60%"}
```{r}
ipca_tsibble |>
  autoplot(value) + geom_line(col="slategrey", size=1) + labs(y = "IPCA", x = "")
```
:::
:::

## Série temporal de produção de carros no Brasil {.smaller}

-   Volume de carros produzidos no Brasil a partir de 1990.
-   Série com frequência mensal.

```{r}
carros <- read.csv("vendas_veiculos.csv", sep = ";")

carros_tsibble <- carros |>
  mutate(data = as.Date(data, format = "%d/%m/%Y")) |>
  as_tsibble(index = data)

head(carros_tsibble) |> gt()
```

::: aside
https://anfavea.com.br/site/edicoes-em-excel/
:::

## Produção de carros no Brasil {.smaller}

-   Períodos de queda no volume, por exemplo, próximo de 2015 durante a crise política; e
-   2020 durante a pandemia: produção a níveis da década de 90.

```{r}
carros_tsibble |>
  autoplot(valor, size=1) + geom_line(col="slategrey") + 
  labs(y = "Carros Produzidos", x = "") 
```

## Série temporal multivariada de produção agrícola {.smaller}

-   Produção de milho, mandioca e batata no Brasil.
-   Frequência de 3 de 3 em e anos.

```{r}
faodata <- read.csv("FAOSTAT_data_BR_production.csv",
                    header=T)
```


```{r}
faodata_ <- faodata |>
  filter(Item == c("Cassava, fresh", "Maize (corn)", "Potatoes")) |>
  select(Item,Year,Value)

faodata_$Item <- recode_factor(
  faodata_$Item,
  `Cassava, fresh` = "mandioca",
  `Maize (corn)` = "milho",
  Potatoes = "batata")

faodata_ <- faodata_ |> distinct(Item, Year, 
                                 .keep_all = TRUE)

faodata_ <- faodata_ |> 
  as_tsibble(key = Item, index = Year)

head(faodata_) |> gt() 
```

::: aside
https://www.fao.org/faostat/en/#data/QCL
:::

## Produção de milho, mandioca e batata {.smaller}

```{r}
faodata_ |> autoplot(Value) + 
  labs(x="", y="ton")
```

## Série temporal multivariada: Exemplo 2 {.smaller}

-   Playlist Tolerâncias e Ajustes do Canal da Engenharia de Manufatura e Qualidade
-   Frequência diária.

```{r}
tol <- read.csv("tolerancia_ajuste.csv")

tol_tsibble <- tol |>
  mutate(Date = as.Date(Date, format = "%Y-%m-%d")) |>
  as_tsibble(index = Date, key = Video)
```

```{r}
tol_tsibble |> autoplot(Views, alpha = .5, size=1) + 
  labs(y = "Views", x = "")
```

## Série do vídeo #4 {.smaller}

```{r}
tol4_tsibble <- tol_tsibble |>
  filter(Video == "#4", year(Date) >= 2019,
         year(Date)<2024)

tol4_tsibble |> autoplot(Views) +
  geom_line(col="slategrey") +
  labs(y = "Views", x = "")
```

## Série do vídeo #4 {.smaller}

-   Observando a sazonalidade da série.
-   Visualizações agregadas mensalmente.

```{r}
tol4_mensal <- tol4_tsibble |>
  index_by(YearMonth = yearmonth(Date)) |>
  summarise(Views = sum(Views))

tol4_mensal |>
  gg_season(Views, labels = "none") + 
  labs(x = "")
```

## Série do vídeo #4 {.smaller}

-   Sazonalidade seriada: variação anual dentro de cada mês.

```{r}
tol4_mensal |> gg_subseries(Views) + ylab("Views")
```

## Série multivariada de produção de energia {.smaller}

-   Dados com frequência horária de produção de quatro tipos de energia para o ano de 2023 no Brasil.

```{r}
energia_2023 <- read.csv("BALANCO_ENERGIA_SUBSISTEMA_2023.csv", header = T, sep = ";")
head(energia_2023) |> gt()
```

::: aside
https://dados.ons.org.br/group/programacao-da-operacao
:::

## Série multivariada de produção de energia {.smaller}

-   Aumento na produção das fontes complementares quando a hidráulica apresentou declínio no período mais seco.

```{r}
energia_2023_tsibble <- energia_2023 |>
  filter(id_subsistena == "SIN") |>
  rename_with(~ tolower(gsub("val_ger", "", .x))) |>
  mutate(din_instante = as.POSIXct(din_instante, format = "%Y-%m-%d %H:%M:%S")) |>
  as_tsibble(index = din_instante) |>
  select(!c(id_subsistena,nom_subsistema,
            val_carga,val_intercambio)) |>
  pivot_longer(!din_instante)


energia_2023_tsibble |>
  autoplot(value, alpha = .5) + labs(y = "Energia", x = "")
```

## Série multivariada de produção de energia {.smaller}

-   Série plotada em múltiplos painéis.

```{r}
ggplot(energia_2023_tsibble, aes(x = din_instante, 
                                 y = value)) +
  geom_line(col = "slategrey") +
  facet_wrap(nrow=4, ~ name, scales = "free_y") + 
  labs(y = "Energia", x = "")
```

## Série multivariada de produção de energia {.smaller}

-   Série agregada com frequência diária.
-   Mais fácil notar a correlação negativa entre a série hidráulica e as demais.

```{r}
energia_2023_dia <- energia_2023_tsibble |>
  index_by(day = as_date(din_instante)) |>
  group_by(name) |>
  summarise(across(value, sum))

energia_2023_dia |>
  autoplot(value) + labs(y = "Energia (Diária)", x = "")
```

## Série multivariada de produção de energia {.smaller}

-   Agregação a nível mensal.

```{r}
energia_2023_mes <- energia_2023_tsibble |>
  index_by(month = yearmonth(din_instante)) |>
  group_by(name) |>
  summarise(across(value, sum))

energia_2023_mes |>
  autoplot(value) + labs(y = "Energia (mês)", x = "")
```

## Série multivariada de produção de energia {.smaller}

-   Gráficos de dispersão.

```{r}
energia_2023_mes|>
  pivot_wider(values_from=value, names_from=name) |>
  ggpairs(columns=2:5)
```

## Níveis de CO2 na atmosfera {.smaller}

```{r}
co2 <- read.csv("co2_mm_mlo.txt", header = TRUE, skip = 41, sep = "")
co2 <- co2[, 1:5]
colnames(co2) <- c("year", "month", "decimal.date", "monthly.averaged", "de-season.alized")
co2$Date <- as.Date(paste(co2$year, co2$month, "01", sep = "-"))

co2_tsibble <- tsibble(Date = co2$Date, 
                       CO2 = co2$monthly.averaged, 
                       index = Date)

# Plotando série de CO2
co2_tsibble |> autoplot(CO2) + 
  geom_line(col="slategrey") + labs(y="CO2 [PPM]",x="")
```

::: aside
https://climate.nasa.gov/vital-signs/carbon-dioxide
:::

## Níveis de CO2 na atmosfera {.smaller}

-   Últimos 4 anos plotados.
-   Períodos sazonais de pico no início da primavera no hemisfério norte;
-   Vales observados no período de crescimento das plantas.

```{r}
co2_tsibble |> 
  filter(year(Date) >= 2020) |>
  autoplot(CO2) + 
  geom_line(col="slategrey") + labs(y="CO2 [PPM]",x="")
```

## Níveis de CO2 na atmosfera {.smaller}

-   Gráfico sazonal.

```{r}
co2_tsibble <- co2_tsibble |>
  filter(!is.na(CO2))

co2_tsibble <- co2_tsibble |>
  index_by(YearMonth = yearmonth(Date)) |>
  summarise(CO2 = sum(CO2, na.rm = TRUE))
```

```{r}
co2_tsibble |> gg_season(CO2) + labs(x="", y = "CP2 [PPM]")
```

## Níveis de CO2 na atmosfera {.smaller}

-   Decomposição aditiva sazonal.

```{r}
dcmp <- co2_tsibble |>
  model(stl = STL(CO2 ~ season()))
head(components(dcmp)[,3:7]) |> gt()
```

## Níveis de CO2 na atmosfera {.smaller}

```{r}
components(dcmp) |> autoplot() + ggtitle("")
```
