---
title: "Séries Temporais - Introdução e gráficos"
author: "Robson Bruno Dutra Pereira"
format: html
editor: visual
execute:
  echo: false
  warning: false
  message: false
---

## Introdução à disciplina Séries Temporais

Uma série temporal consiste em um conjunto de observações de uma variável aleatória ordenada no tempo. A Análise de Séries temporais visa o estudo e obtenção de modelos preditivos para este tipo de dados. O objetivo ao final é realizar previsões com o modelo obtido, de forma a viabilizar ações de planejamento necessárias.

A previsão é importante em diversos contextos das engenharias, administração e ciências. Por exemplo, para decidir o nível de produção e planejar o próximo período é importante prever a demanda. Para avaliar se um investimento é viável é importante prever a sua rentabilidade. Para planejamento dos sistemas energéticos é importante prever o consumo de energia. Para prever a capacidade de produção de energia hidroelétrica é preciso prever a precipitação.

```{r}
library(rbcb)
library(forecast)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(fpp3)
library(GGally)
library(gt)
theme_set(theme_bw())
```

### Exemplos de séries e visualizações

A seguir observa-se graficamente a série temporal do índice de preços ao consumidor (IPCA), com frequência mensal a partir de 1980. A série foi obtida em http://www.ipeadata.gov.br. As primeiras observações da série também são exibidas. Observa-se claramente como a inflação no país foi controlada a partir da adoção do plano real.

```{r}
ipca <- get_series(c(IPCA = 433), as = "ts")

ipca_tsibble <- as_tsibble(ipca, index = index)

head(ipca_tsibble) |> gt()
```

```{r}
ipca_tsibble |>
  autoplot(value) + geom_line(col="slategrey") + labs(y = "IPCA", x = "")
```

Para visualizar melhor como o IPCA variou nos últimos anos, pode-se selecionar os dados a partir do ano 2000.

```{r}
ipca_tsibble |>  filter(year(index) >= 2000) |> autoplot(value) + geom_line(col="slategrey") + labs(y = "IPCA", x = "")
```

A seguir apresentam-se as primeiras observações da série temporal de volume de carros produzidos no Brasil a partir de 1990. A série foi obtida em https://anfavea.com.br/site/edicoes-em-excel/ e apresenta frequência mensal.

```{r}
carros <- read.csv("vendas_veiculos.csv", sep = ";")

carros_tsibble <- carros |>
  mutate(data = as.Date(data, format = "%d/%m/%Y")) |>
  as_tsibble(index = data)

head(carros_tsibble) |> gt()
```

A série é plotada à seguir. Pode-se observar alguns períodos de queda no volume, por exemplo, próximo de 2015 durante a crise política do país e em 2020 durante a pandemia, onde a produção chegou a níveis anteriores aos dos anos 2000.

```{r}
carros_tsibble |>
  autoplot(valor) + geom_line(col="slategrey") + 
  labs(y = "Carros Produzidos", x = "") 
```

Uma série temporal multivariada de produção de milho, mandioca e batata no Brasil é observada à seguir. Os valores são observados de 3 em 3 anos, https://www.fao.org/faostat/en/#data/QCL. Observa-se que a série de milho apresenta um padrão linear até 2005 e depois outro padrão linear porém, com maior inclinação, destacando-se em relação às outras séries. A produção de mandioca apresenta cíclico irregular com tendência de queda.

```{r}
faodata <- read.csv("FAOSTAT_data_BR_production.csv",
                    header=T)
```

```{r}
# head(faodata) 
```

```{r}
# glimpse(faodata)
```

```{r}
# levels(as.factor(faodata$Item))
```

```{r}
faodata_ <- faodata |>
  filter(Item == c("Cassava, fresh", "Maize (corn)", "Potatoes")) |>
  select(Item,Year,Value)

faodata_$Item <- recode_factor(
  faodata_$Item,
  `Cassava, fresh` = "mandioca",
  `Maize (corn)` = "milho",
  Potatoes = "batata")

faodata_ <- faodata_ |> distinct(Item, Year, 
                                 .keep_all = TRUE)

faodata_ <- faodata_ |> 
  as_tsibble(key = Item, index = Year)

head(faodata_) |> gt() 
```

```{r}
faodata_ |> autoplot(Value) + 
  labs(x="", y="ton")
```

A série de produção de batata é plotada individualmente à seguir. Devido a grande diferença em relação aos níveis de produção de milho, aparentemente parecia próxima de estacionária, porém ao plotar individualmente, observa-se uma tendência linear no aumento de produção deste item.

```{r}
faodata_ |> 
  filter(Item=="batata") |> 
  autoplot(Value) + geom_line(col="slategrey") + 
  labs(x="", y="ton")
```

Um exemplo de série temporal multivariada é observada a seguir considerando dados de visualizaçoes de 4 vídeos da playlist Tolerâncias e ajustes do Canal da engenharia de manufatura e qualidade. A série inicia em 2018, ano de início do canal, porém só tem dados segundo a data de lançamento de cada vídeo. A seguir são observadas algumas linhas da série.

```{r}
tol <- read.csv("tolerancia_ajuste.csv")

tol_tsibble <- tol |>
  mutate(Date = as.Date(Date, format = "%Y-%m-%d")) |>
  as_tsibble(index = Date, key = Video)

head(tol_tsibble) |> gt()
```

Em seguida a série multivariada é plotada.

```{r}
tol_tsibble |> autoplot(Views, alpha = .5) + 
  labs(y = "Views", x = "")
```

Tomando a série do vídeo 4 plotado a partir de setembro de 2018.

```{r}
tol4_tsibble <- tol_tsibble |>
  filter(Video == "#4", year(Date) >= 2019,
         year(Date)<2024)

tol4_tsibble |> autoplot(Views) +
  geom_line(col="slategrey") +
  labs(y = "Views", x = "")
```

Pode-se visualizar os dados desta série em subséries anuais, de forma a ver a sazonalidade presente nos dados. Pode-se visualizar os picos de visualizações em Abril e Outubro coincidindo com períodos de picos de estudos nos primeiro segundo semestres anuais.

```{r}
tol4_mensal <- tol4_tsibble |>
  index_by(YearMonth = yearmonth(Date)) |>
  summarise(Views = sum(Views))

tol4_mensal |>
  gg_season(Views, labels = "none") + 
  labs(x = "")
```

Pode-se plotar o gráfico sazonal visualizando a variação anual dentro de cada mês.

```{r}
tol4_mensal |> gg_subseries(Views) + ylab("Views")
```

A seguir são observados dados de produção de quatro tipos de energia para o ano de 2023 no Brasil. Os dados são fornecidos em frequência horária e estão disponíveis em https://dados.ons.org.br/group/programacao-da-operacao.

```{r}
energia_2023 <- read.csv("BALANCO_ENERGIA_SUBSISTEMA_2023.csv", header = T, sep = ";")
# head(energia_2023) |> gt()
```

A série temporal multivariada é plotada a seguir. Pode-se observar o aumento na produção das fontes complementares quando a hidráulica apresentou declínio no período mais seco do ano.

```{r}
energia_2023_tsibble <- energia_2023 |>
  filter(id_subsistena == "SIN") |>
  rename_with(~ tolower(gsub("val_ger", "", .x))) |>
  mutate(din_instante = as.POSIXct(din_instante, format = "%Y-%m-%d %H:%M:%S")) |>
  as_tsibble(index = din_instante) |>
  select(!c(id_subsistena,nom_subsistema,
            val_carga,val_intercambio)) |>
  pivot_longer(!din_instante)

energia_2023_tsibble |> head() |> gt()
```

```{r}
energia_2023_tsibble |>
  autoplot(value, alpha = .5) + labs(y = "Energia", x = "")
```


A série temporal multivariada é plotada em múltiplos painéis a seguir.

```{r}
ggplot(energia_2023_tsibble, aes(x = din_instante, 
                                 y = value)) +
  geom_line(col = "slategrey") +
  facet_wrap(nrow=4, ~ name, scales = "free_y") + 
  labs(y = "Energia", x = "")
```

Em algumas situações é importante agregar os dados de forma a facilitar a interpretação. A seguir plota-se a mesma série agregada diariamente. Fica mais fácil notar a correlação negativa entre a série hidráulica e as demais.

```{r}
energia_2023_dia <- energia_2023_tsibble |>
  index_by(day = as_date(din_instante)) |>
  group_by(name) |>
  summarise(across(value, sum))

energia_2023_dia |>
  autoplot(value) + labs(y = "Energia (Diária)", x = "")
```

Pode-se visualizar a correlação aos pares entre os diferentes tipos de energia considerados.

```{r}
energia_2023_dia|>
  pivot_wider(values_from=value, names_from=name) |>
  ggpairs(columns=2:5)
```

Para uma interpretação ainda mais fácil realiza-se uma última agregação a nível mensal.

```{r}
energia_2023_mes <- energia_2023_tsibble |>
  index_by(month = yearmonth(din_instante)) |>
  group_by(name) |>
  summarise(across(value, sum))

energia_2023_mes |>
  autoplot(value) + labs(y = "Energia (mês)", x = "")
```

Observa-se que a correlação considerando a frequência mensal fica muito mais clara.

```{r}
energia_2023_mes|>
  pivot_wider(values_from=value, names_from=name) |>
  ggpairs(columns=2:5)
```

A seguir apresenta-se a série temporal de níveis de CO2 na atmosfera medida no Observatório Mauna Loa, Havaí, desde 1958, https://climate.nasa.gov/vital-signs/carbon-dioxide. Observa-se um padrão de crescimento não linear com ciclos sazonais bem definidos.

```{r}
co2 <- read.csv("co2_mm_mlo.txt", header = TRUE, skip = 41, sep = "")
co2 <- co2[, 1:5]
colnames(co2) <- c("year", "month", "decimal.date", "monthly.averaged", "de-season.alized")
co2$Date <- as.Date(paste(co2$year, co2$month, "01", sep = "-"))

co2_tsibble <- tsibble(Date = co2$Date, 
                       CO2 = co2$monthly.averaged, 
                       index = Date)

# Plotando série de CO2
co2_tsibble |> autoplot(CO2) + 
  geom_line(col="slategrey") + labs(y="CO2 [PPM]",x="")
```

A seguir apenas os últimos 4 anos são plotados. Pode-se observar que os períodos sazonais de pico coincidem com o início da primavera no hemisfério norte, enquanto os vales são observados no período de crescimento das plantas, as quais capturam parte significativa do CO2 da atmosfera.

```{r}
co2_tsibble |> 
  filter(year(Date) >= 2020) |>
  autoplot(CO2) + 
  geom_line(col="slategrey") + labs(y="CO2 [PPM]",x="")
```

O gráfico sazonal também pode ser útil neste caso.

```{r}
co2_tsibble <- co2_tsibble |>
  filter(!is.na(CO2))

co2_tsibble <- co2_tsibble |>
  index_by(YearMonth = yearmonth(Date)) |>
  summarise(CO2 = sum(CO2, na.rm = TRUE))
```

```{r}
co2_tsibble |> gg_season(CO2) + labs(x="", y = "CP2 [PPM]")
```

Existem diversas formas de decompor séries temporais. A seguir é observada uma decomposição aditiva sazonal da série CO2. A componente cíclica é removida e o restante é suavizado para encontrar uma tendência. O resíduo consiste na diferença entre a série original e a soma da tendência e da componente sazonal.

```{r}
dcmp <- co2_tsibble |>
  model(stl = STL(CO2 ~ season()))
head(components(dcmp)[,3:7]) |> gt()
```

```{r}
components(dcmp) |> autoplot() + ggtitle("")
```

## Referências 

Hyndman, R.J., & Athanasopoulos, G. (2021) Forecasting: principles and practice, 3rd edition, OTexts: Melbourne, Australia. OTexts.com/fpp3. Accessed on 01/10/2024.

